{"version":3,"sources":["logo.svg","actions/index.js","firebase/firebase.js","components/login.js","components/navigation.js","components/home.js","firebase/services.js","components/addOrg-Modal.js","components/organizations.js","components/addOrganization.js","components/addTourn-Modal.js","components/orgInfo.js","components/tournInfo.js","components/main.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DATA_AVAILABLE","SET_AUTH","SET_ORG","SET_ORGANIZATIONS","SET_TOURNAMENTS","SET_TOURNAMENT","authenticate","type","setOrg","payload","org","setOrganizations","organizations","setTournaments","tournaments","setTournament","tournament","firebase","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setEmail","event","setState","email","target","value","setPass","pass","onLogin","state","that","assertThisInitialized","auth","signInWithEmailAndPassword","then","user","console","log","history","push","catch","error","code","inherits","createClass","key","react_default","a","createElement","className","src","logo","alt","id","onChange","onClick","style","color","fontSize","Component","connect","authentication","loginReducer","dispatch","bindActionCreators","Actions","Navigation","NavLink","to","Home","orgs","navigation_Navigation","URL","db","database","fetchOrgs","fetch","res","json","postOrg","ref","postTourn","tourn","updateOrg","key2","child","set","fetchTournament_Key","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","str","wrap","_context2","prev","next","abrupt","stop","_x3","apply","arguments","AddOrgModal","closeModal","showModal","setName","name","setUrl","url","onSubmit","obj","banner","subscriptions","Tournaments","default","msg","showTourn","newProps","show","lib_default","isOpen","onRequestClose","contentLabel","overlay","backgroundColor","placeholder","marginLeft","Organizations","componentDidMount","length","snapshot","list","temp","openModal","onOrgClick","onOrganization","_this2","addOrg_Modal_AddOrgModal","map","i","Link","textDecoration","orgReducer","AddOrganization","border","padding","width","AddTournModal","setStartDate","d","Date","date","START","setEndDate","end","toDateString","Gamekey","orgKey","t","OrgInfo","onTournamentClick","addTourn_Modal_AddTournModal","TournInfo","grabGames","curr_games","games","incr_date","setDate","getDate","decr_date","match","params","t_name","startDate","endDate","game","hName","aName","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Main","BrowserRouter","basename","process","Switch","exact","path","main_PrivateRoute","React","loginState","orgState","rootReducer","combineReducers","undefined","objectSpread","action","store","createStore","App","es","main","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1224781.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const DATA_AVAILABLE = 'DATA_AVAILABLE';\nexport const SET_AUTH = 'SET_AUTH';\nexport const SET_ORG = 'SET_ORG';\nexport const SET_ORGANIZATIONS = 'SET_ORGANIZATIONS';\nexport const SET_TOURNAMENTS = 'SET_TOURNAMENTS';\nexport const SET_TOURNAMENT = 'SET_TOURNAMENT';\n\n\n//Import the sample data\n// import Data from '../instructions.json';\n \n// export function getData(){\n//     return (dispatch) => {\n \n//         //Make API Call\n//         //For this example, I will be using the sample data in the json file\n//         //delay the retrieval [Sample reasons only]\n//         setTimeout(() => {\n//             const data  = Data.instructions;\n//             dispatch({type: DATA_AVAILABLE, data:data});\n//         }, 2000);\n \n//     };\n// };\n\n// export function authenticate(pro){\n//     return (dispatch) => {\n//         dispatch({type: SET_AUTH, profile: pro});\n//     };\n// };\n\nexport function authenticate(){\n    return {type: SET_AUTH};\n};\n\nexport function setOrg(payload){\n    return {type: SET_ORG, org:payload};\n};\n\nexport function setOrganizations(payload){\n    return {type: SET_ORGANIZATIONS, organizations:payload};\n};\n\nexport function setTournaments(payload){\n    return {type: SET_TOURNAMENTS, tournaments:payload};\n};\n\nexport function setTournament(payload){\n    return {type: SET_TOURNAMENT, tournament:payload};\n};","import Firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCbIHF6AK4Kc1HK0Z9wELL7BEI3qst7-bg\",\n    authDomain: \"basketball-9e231.firebaseapp.com\",\n    databaseURL: \"https://basketball-9e231.firebaseio.com\",\n    projectId: \"basketball-9e231\",\n    storageBucket: \"basketball-9e231.appspot.com\",\n    messagingSenderId: \"223402913199\"\n  };\n\nlet app = Firebase.initializeApp(config);\n\n\n  export const firebase = app;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport '../css/login.css';\nimport {firebase} from '../firebase/firebase';\nimport logo from '../logo.svg';\n\nexport class Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            pass: '',\n            error: '',\n        }\n    }\n\n    setEmail = (event) =>{\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    setPass = (event) =>{\n        this.setState({\n            pass: event.target.value\n        })\n    };\n\n    onLogin = () =>{\n        let email = this.state.email;\n        let pass = this.state.pass;\n        let that = this;\n        firebase.auth().signInWithEmailAndPassword(email, pass).then(function(user){\n            console.log(user)\n            that.props.authenticate();\n            that.props.history.push('/home');\n        }).catch((error) => {\n            if (error.code === 'auth/invalid-email')\n                console.log(error.code)            \n            if(error.code === 'auth/wrong-password')\n                console.log(error.code)\n\n            this.setState({\n                error: error.code\n            })\n        });\n    }\n    \n  render() {\n    return (\n      <div className='App'>\n        <div className='Login'>\n            <div className='form'>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <form id='login'>\n                    <p>Email</p>\n                    <input id='email' type='text' value={this.state.email} onChange={this.setEmail}/>\n                    <br/>\n                    <p>Password</p>\n                    <input id='pass' type='text' value={this.state.pass} onChange={this.setPass}/>\n                    <br/>\n                </form>\n                <button id='login-btn'onClick={this.onLogin}>Login</button>\n\n                <p style={{color: 'yellow', fontSize: '20px'}}>{this.state.error}</p>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// The function takes data from the app current state,\n// and insert/links it into the props of our component.\n// This function makes Redux know that this component needs to be passed a piece of the state\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n// Doing this merges our actions into the component’s props,\n// while wrapping them in dispatch() so that they immediately dispatch an Action.\n// Just by doing this, we will have access to the actions defined in out actions file (action/Login.js)\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\nimport '../css/navigation.css'\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Navigation = (props) => {\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-default\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t\t<ul className=\"nav navbar-nav\">\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Home</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/organizations\">Organizations</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Tournaments</NavLink></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {Navigation} from './navigation';\nimport '../css/home.css';\n\nexport class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            orgs: [],\n        }\n    }\n\n  render() {\n    return (\n      <div className='Home'>\n        <Navigation/>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { firebase } from './firebase';\n\nconst TOURNAMENTS_URL = '/v1/Tournaments/';\nconst URL = 'https://basketball-9e231.firebaseio.com';\n// Database structure:\n// Organizations obj:\n                // {banner: 'url to picture',\n                // name: 'Name of organization',\n                // subscriptions: 'Number of subs',\n                // Tournaments:{ \n                //     Tournament key: {\n                //         date: 'starting date of tournament',\n                //         name: 'Name of tournament'\n                //     }}\n                // }\n// Tournaments obj:\n            // {Tournament key: {\n            //     (Date of Game) Key:{\n            //         Game Key:{\n            //             aName: 'away team name',\n            //             hName: 'home team name',\n            //             aScore: 'away team score',\n            //             hScore: 'home team score',\n            //             time : 'Time of the game',\n            //         }\n            //     }\n            // }}\nconst db = firebase.database();\n\nexport const fetchOrgs = () =>{\n    let str = '/v1/Organizations.json';\n    return fetch(URL + str).then((res) => res.json());\n};\n\nexport const fetchOrg_Key = (that, key) =>{\n    let str = '/v1/Organizations/' + key + '.json';\n    fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n        console.log(snapshot);\n    });\n};\n\n\nexport const postOrg = (org) => {\n    console.log(org);\n    db.ref('/v1/Organizations').push(org);\n};\n\nexport const postTourn = (tourn) => {\n    console.log(tourn);\n    let post = db.ref(TOURNAMENTS_URL).push(tourn);\n    return post.key;\n};\n\nexport const updateOrg = (key, key2,tourn) =>{\n    console.log(tourn);\n    let ref = db.ref('/v1/Organizations/'+ key +'/Tournaments');\n    ref.child(key2).set(tourn);\n}\n\nexport const fetchTournaments_Keys = async (that, tourn) =>{\n    let list = [];\n    for (let key in tourn){\n        let str = TOURNAMENTS_URL;\n        str += key + '.json';\n        fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n                list.push(snapshot);\n                that.props.setTournaments(list);\n                that.setState({\n                    tournaments: list,\n                });\n        });\n\n    }\n};\n\nexport const fetchTournament_Key = async (key) =>{\n    let str = TOURNAMENTS_URL;\n    str += key + '.json';\n    return fetch(URL + str).then((res) => res.json());\n};","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport {postOrg} from '../firebase/services';\nimport '../css/organizations.css'\n\nexport default class AddOrgModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal: false,\n            showTourn: false,\n            name: '',\n            url: '',\n            msg:'',\n        }\n    };\n    componentWillReceiveProps(newProps){\n        console.log(newProps);\n        this.setState({\n            showModal: newProps.show,\n        })\n    }\n    \n    closeModal = () =>{\n        this.setState({\n            showModal: false\n        });\n        this.props.that.setState({\n            showModal:false,\n        });\n    };\n\n    setName = (event) =>{\n        this.setState({\n            name: event.target.value\n        })\n    };\n\n    setUrl = (event) =>{\n        this.setState({\n            url: event.target.value\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: this.state.url, subscriptions: 0, Tournaments: {default:'test'}};\n        if(this.state.name !== ''){\n            postOrg(obj);\n            this.setState({\n               msg: 'Organization Added!',\n           });\n        }else{\n            this.setState({\n                msg: 'Name: Field is Empty'\n            })\n        }\n    }\n\n  render() {\n    return (\n            <div>\n                <Modal\n                isOpen={this.state.showModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n                className=\"Modal\"\n                style={{overlay:{backgroundColor: 'black'} }}\n                >\n\n                <div id='form-container'>\n                    <form>\n                        <p style={{color:'white'}}>Name of Organization</p>\n                        <input placeholder='NBA' id='name-form'type='text' value={this.state.name} onChange={this.setName}/>\n\n                        <p style={{color:'white'}}>Logo Url</p>\n                        <input placeholder='Optional' id='name-form'type='text' value={this.state.url} onChange={this.setUrl}/>\n                    </form>\n                    <button id='submit-btn' onClick={this.onSubmit}>Submit</button>\n\n                    <p style={{color: 'yellow', fontSize:'20px', marginLeft: '16%'}}>{this.state.msg}</p>\n                </div>\n\n                <div id='btn-container'>\n                    <button id='close-btn' onClick={this.closeModal}>Close</button>\n                </div>\n\n                </Modal>\n            </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {fetchOrgs} from '../firebase/services';\nimport {Navigation} from './navigation';\nimport AddOrgModal from './addOrg-Modal';\nimport '../css/organizations.css';\n\nimport {Link} from 'react-router-dom';\n\nexport class Organizations extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tournaments:[],\n            onOrganization:{},\n            orgs: [],\n            showModal: false,\n            showTourn: false,\n        }\n    }\n\n    componentDidMount = () =>{\n        let that = this;\n\n        //Fetch all organizations and set to REDUX state organizations\n        if(this.state.orgs.length === 0){\n            console.log('fetched');\n            fetchOrgs().then((snapshot) => {\n                let list = [];\n                for (let key in snapshot){\n                    let temp = snapshot[key];\n                    temp['key'] = key;\n                    list.push(temp);\n                }\n                that.props.setOrganizations(list);\n                that.setState({\n                    orgs: that.props.organizations,\n                });\n            });; \n\n        }else{\n            this.setState({\n                orgs: this.props.organizations\n            })\n        }\n   \n    }\n\n    openModal = () =>{\n        this.setState({\n            showModal: true\n        })\n    };\n\n    onOrgClick = (org) =>{\n        this.props.setOrg(org);\n        let tourn = org.Tournaments;\n        let temp = [];\n        for(let key in  tourn){\n            temp.push(tourn[key]);\n        }\n        this.setState({\n            onOrganization: org,\n            tournaments: temp,\n            showTourn: true,\n        });\n    };\n\n\n  render() {\n    return (\n      <div className='Organizations'>\n        <Navigation/>\n        <button id='add-btn' onClick={this.openModal}>+ Add Organization</button>\n        {this.state.showTourn&&<button id='add-btn' onClick={this.openModal}>+ Add Tournament</button>}\n\n        <div id='container'>\n\n            <AddOrgModal show={this.state.showModal} that={this}/>\n\n                <div id='item-container'>\n                    <table>\n                        <thead>\n                            <tr id='header'>\n                                <th>#</th>\n                                <th>Name</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.orgs.map( (org, i) => \n                            <tr key={i}>\n                                <td>{i}</td>\n                                <td>\n                                    <Link to={'/organizations/' + org.name} style={{textDecoration: 'none', color:'black'}} onClick={() =>{this.onOrgClick(org)}}>\n                                        <div id=\"org\">{org.name}</div>\n                                    </Link>\n                                </td>\n                            </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        org: state.orgReducer.org,\n        organizations: state.orgReducer.organizations,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Organizations);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {postOrg} from '../firebase/services';\nimport {Navigation} from './navigation';\n\nexport class AddOrganization extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n        }\n    }\n\n    setName = (event) => {\n        this.setState({\n            name: event.target.value,\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: '', subscriptions: 0, Tournaments: {default:'test'}};\n        postOrg(obj);\n    };\n\n  render() {\n    return (\n      <div className='AddOrganization'>\n        <Navigation/>\n        <h3>Add Organization</h3>\n        <div style={{border: '1px solid white'}}>\n        <form style={{padding:'10px'}}>\n            <p>Name</p>\n            <input id='name' type='text' value={this.state.name} onChange={this.setName}/>\n        </form>\n        <button style={{width:'150px'}} onClick={this.onSubmit}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport {postTourn, updateOrg} from '../firebase/services';\n\nimport '../css/organizations.css'\n\nexport default class AddTournModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal: false,\n            name: '',\n            msg:'',\n            date: '',\n            end: '',\n            START: null,\n        }\n    };\n    componentWillReceiveProps(newProps){\n        console.log(newProps);\n        this.setState({\n            showModal: newProps.show,\n        })\n    }\n    \n    closeModal = () =>{\n        this.setState({\n            showModal: false\n        })\n    };\n\n    setName = (event) =>{\n        this.setState({\n            name: event.target.value\n        })\n    };\n\n    setStartDate = (event) =>{\n        let str = event.target.value;\n        let d = new Date(str + ' EST');\n        this.setState({\n            date: event.target.value,\n            START: d,\n        });\n\n    };\n\n    setEndDate = (event) =>{\n        this.setState({\n            end: event.target.value,\n        })\n    };\n\n    onSubmit = () =>{\n        if(this.state.name !== '' && this.state.date !== '' && this.state.end !== ''){\n            let date = this.state.START.toDateString();\n            let obj = {};\n            obj[date] = {'Gamekey': 'default'};\n            //key value of new post\n            let key = postTourn(obj);\n\n            //Post new tournament under Organizations Collection\n            obj = {};\n            obj['date'] = this.state.date;\n            obj['end'] = this.state.end;\n            obj['name'] = this.state.name;\n            updateOrg(this.props.orgKey, key, obj);\n            let t = this.props.tournaments;\n            t.push(obj);\n            this.props.that.setState({\n                tournaments: t\n            })\n            this.setState({\n                msg: 'Tournament Created',\n            })\n        }else{\n            this.setState({\n                msg: 'A Field is Empty',\n            })\n        }\n\n    }\n\n  render() {\n    return (\n        <div>\n            <Modal\n            isOpen={this.state.showModal}\n            onRequestClose={this.closeModal}\n            contentLabel=\"Example Modal\"\n            className=\"Modal\"\n            style={{overlay:{backgroundColor: 'black'} }}\n            >\n\n            <div id='form-container'>\n                <form>\n                    <p style={{color:'white'}}>Name of Tournament</p>\n                    <input placeholder='Houseleague' id='name-form'type='text' value={this.state.name} onChange={this.setName}/>\n\n                    <p style={{color:'white'}}>Start Date</p>\n                    <input placeholder='Houseleague' id='name-form'type='date' value={this.state.date} onChange={this.setStartDate}/>\n\n                    <p style={{color:'white'}}>End Date</p>\n                    <input placeholder='Houseleague' id='name-form'type='date' value={this.state.end} onChange={this.setEndDate}/>\n                </form>\n                <button id='submit-btn' onClick={this.onSubmit}>Submit</button>\n\n                <p style={{color: 'yellow', fontSize:'20px', marginLeft: '16%'}}>{this.state.msg}</p>\n            </div>\n\n            <div id='btn-container'>\n                <button id='close-btn' onClick={this.closeModal}>Close</button>\n            </div>\n\n            </Modal>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {Navigation} from './navigation';\nimport AddTournModal from './addTourn-Modal';\nimport '../css/orgInfo.css';\nimport {Link} from 'react-router-dom';\n\nexport class OrgInfo extends Component {\n    constructor(props){\n        super(props);\n        this.org = this.props.org;\n        this.tournaments = this.org.Tournaments;\n        this.state = {\n            tournaments: [],\n            showModal: false,\n        }\n    }\n\n    componentDidMount = () =>{\n        let list = [];\n        for(let key in this.tournaments){\n            this.tournaments[key]['key'] = key;\n            list.push(this.tournaments[key])\n        };\n        this.setState({\n            tournaments:list\n        })\n    }\n\n    openModal = () =>{\n        this.setState({\n            showModal: true\n        })\n    };\n    \n    onTournamentClick = (tourn) =>{\n        this.props.setTournament(tourn);\n    }\n\n  render() {\n    return (\n      <div className='OrgInfo'>\n        <Navigation/>\n        <button id='add-btn' onClick={this.openModal}>+ Add Tournament</button>\n\n        <div id='banner'>\n                <h3>{this.org.name}</h3>\n        </div>\n        <div id='container'>\n\n            <AddTournModal show={this.state.showModal} orgKey={this.org.key} tournaments={this.state.tournaments} that={this}/>\n            <div id='item-container'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Start</th>\n                            <th>End</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.tournaments.map( (t, i) => \n                            <tr key={i}>\n                                <td>{i}</td>\n                                <td><Link id ='link' to={'/organizations/' + this.org.name + '/' + t.key} onClick={()=>{this.onTournamentClick(t)}}><div>{t.name}</div></Link></td>\n                                <td><Link id ='link' to={'/organizations/' + this.org.name + '/' + t.key} onClick={()=>{this.onTournamentClick(t)}}><div>{t.date}</div></Link></td>\n                                <td><Link id ='link' to={'/organizations/' + this.org.name + '/' + t.key} onClick={()=>{this.onTournamentClick(t)}}><div>{t.end}</div></Link></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        org: state.orgReducer.org,\n        organizations: state.orgReducer.organizations,\n        tournaments: state.orgReducer.tournaments,\n\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {Navigation} from './navigation';\nimport {fetchTournament_Key} from '../firebase/services';\nimport '../css/tournInfo.css';\n\nexport class TournInfo extends Component {\n    constructor(props){\n        super(props);\n        this.key = this.props.match.params.t_name;\n        this.tournament = this.props.tournament;\n        this.date = new Date(this.tournament.date + 'EST');\n\n        this.startDate = new Date( this.tournament.date + 'EST');\n        this.endDate = new Date( this.tournament.end + 'EST');\n\n        this.state = {\n            showModal: false,\n            tournament: {},\n            date: this.date,\n            curr_games: [],\n        };\n    };\n\n    componentDidMount = () =>{\n        let that = this;\n        fetchTournament_Key(this.key).then((snapshot) => {\n            //Grab the current dates Games\n            that.setState({\n                tournament: snapshot,\n            });\n            let list = that.grabGames();\n            that.setState({\n                curr_games:list,\n            })\n\n        });\n    };\n\n    grabGames = ()=>{\n        //Get games from the tournament state that holds only game date keys\n        let games = this.state.tournament[this.date.toDateString()];\n        let list = [];\n        if (games !== null){\n            for( let key in games){\n                list.push(games[key])\n            }\n        };\n        return list;\n    }\n    incr_date = () =>{\n        //increment the Date and grab the games for that date\n        this.date.setDate(this.date.getDate() + 1);\n        let list = this.grabGames();\n        this.setState({\n            date: this.date,\n            curr_games: list,\n\n        })\n        console.log(this.state.curr_games);\n\n    }\n\n    decr_date = () =>{\n        //Decrement the Date and grab the games for that date\n        this.date.setDate(this.date.getDate() - 1);\n        let list = this.grabGames();\n        this.setState({\n            date: this.date,\n            curr_games: list,\n\n        })\n    }\n\n  render() {\n    return (\n      <div className='TournInfo'>\n        <Navigation/>\n        <h1>Start Date: {this.startDate.toDateString()}</h1>\n        <h1>End Date: {this.endDate.toDateString()}</h1>\n\n        <div id='button-bar'>\n            <button>+ Add Game</button>\n        </div>\n\n        <div id='date-bar'>\n            <button onClick={this.decr_date}>Left</button>\n            <h1>{this.state.date.toDateString()}</h1>\n            <button onClick={this.incr_date}>Right</button>\n        </div>\n        <div id='games-list'>\n            {this.state.curr_games.map( (game,i) => \n                <div key={i}>\n                    <p>{game.hName} VS {game.aName}</p>\n                </div>\n            )}\n        </div>\n      </div>\n    );  \n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        tournament: state.orgReducer.tourn,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(TournInfo);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './login';\nimport Home from './home';\nimport Organizations from './organizations';\nimport AddOrganization from './addOrganization';\nimport OrgInfo from './orgInfo';\nimport TournInfo from './tournInfo';\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={ (props)  => (\n        rest.auth === true\n        ? <Component {...props}/>\n        : <Redirect to= '/'/>\n    )}/>\n)   \n\nclass Main extends React.Component{\n\n\trender() {\n\t\treturn(\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login}/>\n                        <PrivateRoute exact path='/home' component={Home} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations\" component={Organizations} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations/:name\" component={OrgInfo} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations/:name/:t_name\" component={TournInfo} auth={this.props.authentication}/>\n                        <Route exact path=\"/addOrg\" component={AddOrganization}/>\n                    </Switch>\n                </Router>\n\t\t);\n\t}\n};\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n//Connect everything\nexport default connect(mapStateToProps)(Main);","import { combineReducers } from 'redux';\n \nimport { SET_AUTH, SET_ORG, SET_ORGANIZATIONS, SET_TOURNAMENTS, SET_TOURNAMENT } from \"../actions/\" //Import the actions types constant we defined in our actions\n\n\nlet loginState = {authentication: false};\nconst loginReducer = (state = loginState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            state = {...loginState, authentication: true};\n            return state;\n        default:\n            return state;\n    }\n};\n\nlet orgState = {organizations: [], org: {}, tournaments: [], tourn: {}};\nconst orgReducer = (state = orgState, action) => {\n    switch (action.type) {\n        case SET_ORG:\n            state = {...orgState, org: action.org};\n            return state;\n        case SET_ORGANIZATIONS:\n            state = {...orgState, organizations: action.organizations};\n            return state;\n        case SET_TOURNAMENTS:\n            state = {...orgState, tournaments: action.tournaments};\n            return state;\n        case SET_TOURNAMENT:\n            state = {...orgState, tourn: action.tournament};\n            return state;\n        default:\n            return state;\n    }\n};\n// Combine all the reducers\nconst rootReducer = combineReducers({\n    loginReducer,\n    orgReducer,\n    // ,[ANOTHER REDUCER], [ANOTHER REDUCER] ....\n})\n \nexport default rootReducer;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './components/main';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n    <BrowserRouter> \n        <App />\n    </BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}