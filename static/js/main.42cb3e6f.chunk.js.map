{"version":3,"sources":["logo.svg","actions/index.js","firebase/firebase.js","components/login.js","components/navigation.js","components/home.js","firebase/services.js","components/addOrg-Modal.js","components/organizations.js","components/addOrganization.js","components/orgInfo.js","components/main.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DATA_AVAILABLE","SET_AUTH","SET_ORG","SET_ORGANIZATIONS","SET_TOURNAMENTS","authenticate","type","setOrg","payload","org","setOrganizations","organizations","setTournaments","tournaments","firebase","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setEmail","event","setState","email","target","value","setPass","pass","onLogin","state","that","assertThisInitialized","auth","signInWithEmailAndPassword","then","user","history","push","catch","error","code","console","log","inherits","createClass","key","react_default","a","createElement","className","src","logo","alt","id","onChange","onClick","style","color","fontSize","Component","connect","authentication","loginReducer","dispatch","bindActionCreators","Actions","Navigation","NavLink","to","Home","orgs","navigation_Navigation","URL","db","database","fetchOrgs","fetch","res","json","snapshot","list","temp","postOrg","ref","postTourn","tourn","updateOrg","AddOrgModal","closeModal","showModal","setName","name","setUrl","url","onSubmit","obj","banner","subscriptions","Tournaments","default","msg","showTourn","newProps","show","lib_default","isOpen","onRequestClose","contentLabel","overlay","backgroundColor","placeholder","marginLeft","Organizations","componentDidMount","length","openModal","onOrgClick","onOrganization","_this2","addOrg_Modal_AddOrgModal","map","i","height","width","t","padding","orgReducer","AddOrganization","border","OrgInfo","date","Date","toDateString","Gamekey","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Main","BrowserRouter","basename","process","Switch","exact","path","main_PrivateRoute","React","loginState","orgState","rootReducer","combineReducers","arguments","undefined","objectSpread","action","store","createStore","App","es","main","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42cb3e6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const DATA_AVAILABLE = 'DATA_AVAILABLE';\nexport const SET_AUTH = 'SET_AUTH';\nexport const SET_ORG = 'SET_ORG';\nexport const SET_ORGANIZATIONS = 'SET_ORGANIZATIONS';\nexport const SET_TOURNAMENTS = 'SET_TOURNAMENTS';\n\n//Import the sample data\n// import Data from '../instructions.json';\n \n// export function getData(){\n//     return (dispatch) => {\n \n//         //Make API Call\n//         //For this example, I will be using the sample data in the json file\n//         //delay the retrieval [Sample reasons only]\n//         setTimeout(() => {\n//             const data  = Data.instructions;\n//             dispatch({type: DATA_AVAILABLE, data:data});\n//         }, 2000);\n \n//     };\n// };\n\n// export function authenticate(pro){\n//     return (dispatch) => {\n//         dispatch({type: SET_AUTH, profile: pro});\n//     };\n// };\n\nexport function authenticate(){\n    return {type: SET_AUTH};\n};\n\nexport function setOrg(payload){\n    return {type: SET_ORG, org:payload};\n};\n\nexport function setOrganizations(payload){\n    return {type: SET_ORGANIZATIONS, organizations:payload};\n};\n\nexport function setTournaments(payload){\n    return {type: SET_TOURNAMENTS, tournaments:payload};\n};","import Firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCbIHF6AK4Kc1HK0Z9wELL7BEI3qst7-bg\",\n    authDomain: \"basketball-9e231.firebaseapp.com\",\n    databaseURL: \"https://basketball-9e231.firebaseio.com\",\n    projectId: \"basketball-9e231\",\n    storageBucket: \"basketball-9e231.appspot.com\",\n    messagingSenderId: \"223402913199\"\n  };\n\nlet app = Firebase.initializeApp(config);\n\n\n  export const firebase = app;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport '../css/login.css';\nimport {firebase} from '../firebase/firebase';\nimport logo from '../logo.svg';\n\n\nexport class Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            pass: '',\n            error: '',\n        }\n    }\n\n    setEmail = (event) =>{\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    setPass = (event) =>{\n        this.setState({\n            pass: event.target.value\n        })\n    };\n\n    onLogin = () =>{\n        let email = this.state.email;\n        let pass = this.state.pass;\n        let that = this;\n        firebase.auth().signInWithEmailAndPassword(email, pass).then(function(user){\n            that.props.authenticate();\n            that.props.history.push('/home');\n        }).catch((error) => {\n            if (error.code === 'auth/invalid-email')\n                console.log(error.code)            \n            if(error.code === 'auth/wrong-password')\n                console.log(error.code)\n\n            this.setState({\n                error: error.code\n            })\n        });\n    }\n    \n  render() {\n    return (\n      <div className='App'>\n        <div className='Login'>\n            <div className='form'>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <form id='login'>\n                    <p>Email</p>\n                    <input id='email' type='text' value={this.state.email} onChange={this.setEmail}/>\n                    <br/>\n                    <p>Password</p>\n                    <input id='pass' type='text' value={this.state.pass} onChange={this.setPass}/>\n                    <br/>\n                </form>\n                <button id='login-btn'onClick={this.onLogin}>Login</button>\n\n                <p style={{color: 'yellow', fontSize: '20px'}}>{this.state.error}</p>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// The function takes data from the app current state,\n// and insert/links it into the props of our component.\n// This function makes Redux know that this component needs to be passed a piece of the state\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n// Doing this merges our actions into the component’s props,\n// while wrapping them in dispatch() so that they immediately dispatch an Action.\n// Just by doing this, we will have access to the actions defined in out actions file (action/Login.js)\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\nimport '../css/navigation.css'\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Navigation = (props) => {\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-default\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t\t<ul className=\"nav navbar-nav\">\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Home</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/organizations\">Organizations</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Tournaments</NavLink></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {Navigation} from './navigation';\nimport '../css/home.css';\n\nexport class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            orgs: [],\n        }\n    }\n\n  render() {\n    return (\n      <div className='Home'>\n        <Navigation/>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { firebase } from './firebase';\nconst URL = 'https://basketball-9e231.firebaseio.com';\n// Database structure:\n// Organizations obj:\n                // {banner: 'url to picture',\n                // name: 'Name of organization',\n                // subscriptions: 'Number of subs',\n                // Tournaments:{ \n                //     Tournament key: {\n                //         date: 'starting date of tournament',\n                //         name: 'Name of tournament'\n                //     }}\n                // }\n// Tournaments obj:\n            // {Tournament key: {\n            //     (Date of Game) Key:{\n            //         Game Key:{\n            //             aName: 'away team name',\n            //             hName: 'home team name',\n            //             aScore: 'away team score',\n            //             hScore: 'home team score',\n            //             time : 'Time of the game',\n            //         }\n            //     }\n            // }}\nconst db = firebase.database();\n\nexport const fetchOrgs = (that) =>{\n    let str = '/v1/Organizations.json';\n    fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n        let list = [];\n        for (let key in snapshot){\n            let temp = snapshot[key];\n            temp['key'] = key;\n            list.push(temp);\n        }\n        that.props.setOrganizations(list);\n        that.setState({\n            orgs: that.props.organizations,\n        });\n        return list;\n    });\n};\n\nexport const fetchOrg_Key = (that, key) =>{\n    let str = '/v1/Organizations/' + key + '.json';\n    fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n        console.log(snapshot);\n    });\n};\n\n\nexport const postOrg = (org) => {\n    console.log(org);\n    db.ref('/v1/Organizations').push(org);\n};\n\nexport const postTourn = (tourn) => {\n    console.log(tourn);\n    db.ref('/v1/Tournaments').push(tourn);\n};\n\nexport const updateOrg = (key,tourn) =>{\n    console.log(tourn);\n    db.ref('/v1/Organizations/'+ key +'/Tournaments').push(tourn);\n}\n\nexport const fetchTournaments_Keys = async (that, tourn) =>{\n    let list = [];\n    for (let key in tourn){\n        let str = '/v1/Tournaments/';\n        str += key + '.json';\n        fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n                list.push(snapshot);\n                that.props.setTournaments(list);\n                that.setState({\n                    tournaments: list,\n                });\n        });\n\n    }\n};","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport {postOrg} from '../firebase/services';\nimport '../css/organizations.css'\n\nexport default class AddOrgModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal: false,\n            showTourn: false,\n            name: '',\n            url: '',\n        }\n    };\n    componentWillReceiveProps(newProps){\n        console.log(newProps);\n        this.setState({\n            showModal: newProps.show,\n        })\n    }\n    \n    closeModal = () =>{\n        this.setState({\n            showModal: false\n        });\n        this.props.that.setState({\n            showModal:false,\n        });\n    };\n\n    setName = (event) =>{\n        this.setState({\n            name: event.target.value\n        })\n    };\n\n    setUrl = (event) =>{\n        this.setState({\n            url: event.target.value\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: this.state.url, subscriptions: 0, Tournaments: {default:'test'}};\n        if(this.state.name !== ''){\n            postOrg(obj);\n            this.setState({\n               msg: 'Organization Added!',\n           });\n        }else{\n            this.setState({\n                msg: 'Name: Field is Empty'\n            })\n        }\n    }\n\n  render() {\n    return (\n            <div>\n                <Modal\n                isOpen={this.state.showModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n                className=\"Modal\"\n                style={{overlay:{backgroundColor: 'black'} }}\n                >\n\n                <div id='form-container'>\n                    <form>\n                        <p style={{color:'white'}}>Name of Organization</p>\n                        <input placeholder='NBA' id='name-form'type='text' value={this.state.name} onChange={this.setName}/>\n\n                        <p style={{color:'white'}}>Logo Url</p>\n                        <input placeholder='Optional' id='name-form'type='text' value={this.state.url} onChange={this.setUrl}/>\n                    </form>\n                    <button id='submit-btn' onClick={this.onSubmit}>Submit</button>\n\n                    <p style={{color: 'yellow', fontSize:'20px', marginLeft: '16%'}}>{this.state.msg}</p>\n                </div>\n\n                <div id='btn-container'>\n                    <button id='close-btn' onClick={this.closeModal}>Close</button>\n                </div>\n\n                </Modal>\n            </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {fetchOrgs} from '../firebase/services';\nimport {Navigation} from './navigation';\nimport AddOrgModal from './addOrg-Modal';\nimport '../css/organizations.css'\n\nexport class Organizations extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tournaments:[],\n            onOrganization:{},\n            orgs: [],\n            showModal: false,\n            showTourn: false,\n            name: '',\n            url: '',\n            msg:'',\n        }\n    }\n\n    componentDidMount = () =>{\n        if(this.state.orgs.length === 0){\n            console.log('fetched');\n            fetchOrgs(this); \n\n        }else{\n            this.setState({\n                orgs: this.props.organizations\n            })\n        }\n   \n    }\n\n    openModal = () =>{\n        this.setState({\n            showModal: true\n        })\n    };\n\n    onOrgClick = (org) =>{\n        this.props.setOrg(org);\n        let tourn = org.Tournaments;\n        let temp = [];\n        for(let key in  tourn){\n            temp.push(tourn[key]);\n        }\n        this.setState({\n            onOrganization: org,\n            tournaments: temp,\n            showTourn: true,\n        });\n    };\n\n\n  render() {\n    return (\n      <div className='Organizations'>\n        <Navigation/>\n        <button id='add-btn' onClick={this.openModal}>+ Add Organization</button>\n        {this.state.showTourn&&<button id='add-btn' onClick={this.openModal}>+ Add Tournament</button>}\n        <h3 style={{color: 'white', fontSize:'30px'}}>Organizations</h3>\n\n        <div id='container'>\n\n            <AddOrgModal show={this.state.showModal} that={this}/>\n            \n            <div id=\"columns\">\n                <div id='item-container'>\n                    {this.state.orgs.map( (org, i) =>  \n                    <div key={i}>\n                        \n                        <button id='org-btn' onClick={()=>{this.onOrgClick(org)}}>\n                            <p><img src={org.banner} height='100px' width='200px' alt=''/> {org.name} </p>\n                        </button>\n                    </div>\n                    )}\n                </div>\n\n                <div id='tournaments-container'>\n                    { this.state.showTourn && <div>\n                        {this.state.tournaments.map( (t, i) =>  \n                        <div key={i} style={{padding: '10px'}}>\n                                <div id='tourn-div'>\n                                <p style={{fontSize:'20px'}}> {t.name} </p>\n                                </div>\n                        </div>\n                        )}\n                    </div>}\n                </div>\n            </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        org: state.orgReducer.org,\n        organizations: state.orgReducer.organizations,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Organizations);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {postOrg} from '../firebase/services';\nimport {Navigation} from './navigation';\n\nexport class AddOrganization extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n        }\n    }\n\n    setName = (event) => {\n        this.setState({\n            name: event.target.value,\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: '', subscriptions: 0, Tournaments: {default:'test'}};\n        postOrg(obj);\n    };\n\n  render() {\n    return (\n      <div className='AddOrganization'>\n        <Navigation/>\n        <h3>Add Organization</h3>\n        <div style={{border: '1px solid white'}}>\n        <form style={{padding:'10px'}}>\n            <p>Name</p>\n            <input id='name' type='text' value={this.state.name} onChange={this.setName}/>\n        </form>\n        <button style={{width:'150px'}} onClick={this.onSubmit}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {Navigation} from './navigation';\nimport Modal from 'react-modal';\nimport {postTourn, updateOrg} from '../firebase/services';\n\n\nexport class OrgInfo extends Component {\n    constructor(props){\n        super(props);\n        this.org = this.props.org;\n        this.tournaments = this.org.Tournaments;\n        this.state = {\n            tournaments: [],\n            showModal: false,\n            name: '',\n            msg:'',\n        }\n    }\n\n    componentDidMount = () =>{\n        let list = [];\n        for(let key in this.tournaments){\n            list.push(this.tournaments[key])\n        };\n        this.setState({\n            tournaments:list\n        })\n    }\n\n    openModal = () =>{\n        this.setState({\n            showModal: true\n        })\n    };\n    \n    closeModal = () =>{\n        this.setState({\n            showModal: false\n        })\n    };\n\n    setName = (event) =>{\n        this.setState({\n            name: event.target.value\n        })\n    };\n\n    setUrl = (event) =>{\n        this.setState({\n            url: event.target.value\n        })\n    };\n\n    onSubmit = () =>{\n        if(this.state.name !== ''){\n            let date = new Date().toDateString();\n            let obj = {};\n            obj[date] = {'Gamekey': 'default'};\n            postTourn(obj);\n            obj = {};\n            obj['start'] = date;\n            obj['end'] = date;\n            obj['name'] = this.state.name;\n            updateOrg(this.org.key, obj);\n    \n            this.setState({\n                msg: 'Tournament Created',\n            })\n        }else{\n            this.setState({\n                msg: 'Name: Field is Empty',\n            })\n        }\n\n    }\n\n  render() {\n    return (\n      <div className='OrgInfo'>\n        <Navigation/>\n        <button id='add-btn' onClick={this.openModal}>+ Add Tournament</button>\n        <div id='container'>\n            <h3 style={{color: 'white', fontSize:'30px'}}>{this.org.name}</h3>\n\n            <div>\n                <Modal\n                isOpen={this.state.showModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n                className=\"Modal\"\n                style={{overlay:{backgroundColor: 'black'} }}\n                >\n\n                <div id='form-container'>\n                    <form>\n                        <p style={{color:'white'}}>Name of Tournament</p>\n                        <input placeholder='Houseleague' id='name-form'type='text' value={this.state.name} onChange={this.setName}/>\n                    </form>\n                    <button id='submit-btn' onClick={this.onSubmit}>Submit</button>\n\n                    <p style={{color: 'yellow', fontSize:'20px', marginLeft: '16%'}}>{this.state.msg}</p>\n                </div>\n\n                <div id='btn-container'>\n                    <button id='close-btn' onClick={this.closeModal}>Close</button>\n                </div>\n\n                </Modal>\n            </div>\n            <div id='item-container'>\n\n                {this.state.tournaments.map( (t, i) =>  \n                <div key={i}>\n                        <p>{t.name} </p>\n                </div>\n                )}\n                </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        org: state.orgReducer.org,\n        organizations: state.orgReducer.organizations,\n        tournaments: state.orgReducer.tournaments,\n\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgInfo);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './login';\nimport Home from './home';\nimport Organizations from './organizations';\nimport AddOrganization from './addOrganization';\nimport OrgInfo from './orgInfo';\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={ (props)  => (\n        rest.auth === true\n        ? <Component {...props}/>\n        : <Redirect to= '/'/>\n    )}/>\n)   \n\nclass Main extends React.Component{\n\n\trender() {\n\t\treturn(\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login}/>\n                        <PrivateRoute exact path='/home' component={Home} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations\" component={Organizations} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations/:name\" component={OrgInfo} auth={this.props.authentication}/>\n                        <Route exact path=\"/addOrg\" component={AddOrganization}/>\n                    </Switch>\n                </Router>\n\t\t);\n\t}\n};\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n//Connect everything\nexport default connect(mapStateToProps)(Main);","import { combineReducers } from 'redux';\n \nimport { SET_AUTH, SET_ORG, SET_ORGANIZATIONS, SET_TOURNAMENTS } from \"../actions/\" //Import the actions types constant we defined in our actions\n\n\nlet loginState = {authentication: false};\nconst loginReducer = (state = loginState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            state = {...loginState, authentication: true};\n            return state;\n        default:\n            return state;\n    }\n};\n\nlet orgState = {organizations: [], org: {}, tournaments: []};\nconst orgReducer = (state = orgState, action) => {\n    switch (action.type) {\n        case SET_ORG:\n            state = {...orgState, org: action.org};\n            return state;\n        case SET_ORGANIZATIONS:\n            state = {...orgState, organizations: action.organizations};\n            return state;\n        case SET_TOURNAMENTS:\n            state = {...orgState, tournaments: action.tournaments};\n            return state;\n        default:\n            return state;\n    }\n};\n// Combine all the reducers\nconst rootReducer = combineReducers({\n    loginReducer,\n    orgReducer,\n    // ,[ANOTHER REDUCER], [ANOTHER REDUCER] ....\n})\n \nexport default rootReducer;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './components/main';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n    <BrowserRouter> \n        <App />\n    </BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}