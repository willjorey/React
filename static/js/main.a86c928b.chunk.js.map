{"version":3,"sources":["logo.svg","actions/index.js","firebase/firebase.js","components/login.js","firebase/services.js","components/navigation.js","components/home.js","components/organizations.js","components/addOrganization.js","components/main.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DATA_AVAILABLE","SET_AUTH","authenticate","type","firebase","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setEmail","event","setState","email","target","value","setPass","pass","onLogin","state","that","assertThisInitialized","auth","signInWithEmailAndPassword","then","user","history","push","catch","error","code","console","log","inherits","createClass","key","react_default","a","createElement","className","src","logo","alt","id","onChange","onClick","style","color","fontSize","Component","connect","authentication","loginReducer","dispatch","bindActionCreators","Actions","db","database","fetchOrgs","fetch","URL","res","json","snapshot","list","temp","orgs","postOrg","org","ref","Navigation","NavLink","to","Home","componentDidMount","navigation_Navigation","Organizations","openModal","showModal","closeModal","setName","name","setUrl","url","onSubmit","obj","banner","subscriptions","Tournaments","default","msg","lib_default","isOpen","onRequestClose","contentLabel","overlay","backgroundColor","opacity","placeholder","marginLeft","map","i","width","height","onError","e","onerror","AddOrganization","border","padding","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Main","BrowserRouter","basename","process","Switch","exact","path","main_PrivateRoute","React","loginState","rootReducer","combineReducers","arguments","length","undefined","objectSpread","store","createStore","App","es","main","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a86c928b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const DATA_AVAILABLE = 'DATA_AVAILABLE';\nexport const SET_AUTH = 'SET_AUTH';\n\n//Import the sample data\n// import Data from '../instructions.json';\n \n// export function getData(){\n//     return (dispatch) => {\n \n//         //Make API Call\n//         //For this example, I will be using the sample data in the json file\n//         //delay the retrieval [Sample reasons only]\n//         setTimeout(() => {\n//             const data  = Data.instructions;\n//             dispatch({type: DATA_AVAILABLE, data:data});\n//         }, 2000);\n \n//     };\n// };\n\n// export function authenticate(pro){\n//     return (dispatch) => {\n//         dispatch({type: SET_AUTH, profile: pro});\n//     };\n// };\n\nexport function authenticate(){\n    return {type: SET_AUTH};\n};","import Firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCbIHF6AK4Kc1HK0Z9wELL7BEI3qst7-bg\",\n    authDomain: \"basketball-9e231.firebaseapp.com\",\n    databaseURL: \"https://basketball-9e231.firebaseio.com\",\n    projectId: \"basketball-9e231\",\n    storageBucket: \"basketball-9e231.appspot.com\",\n    messagingSenderId: \"223402913199\"\n  };\n\nlet app = Firebase.initializeApp(config);\n\n\n  export const firebase = app;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport '../css/login.css';\nimport {firebase} from '../firebase/firebase';\nimport logo from '../logo.svg';\n\n\nexport class Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            pass: '',\n            error: '',\n        }\n    }\n\n    setEmail = (event) =>{\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    setPass = (event) =>{\n        this.setState({\n            pass: event.target.value\n        })\n    };\n\n    onLogin = () =>{\n        let email = this.state.email;\n        let pass = this.state.pass;\n        let that = this;\n        firebase.auth().signInWithEmailAndPassword(email, pass).then(function(user){\n            that.props.authenticate();\n            that.props.history.push('/home');\n        }).catch((error) => {\n            if (error.code === 'auth/invalid-email')\n                console.log(error.code)            \n            if(error.code === 'auth/wrong-password')\n                console.log(error.code)\n\n            this.setState({\n                error: error.code\n            })\n        });\n    }\n    \n  render() {\n    return (\n      <div className='App'>\n        <div className='Login'>\n            <div className='form'>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <form id='login'>\n                    <p>Email</p>\n                    <input id='email' type='text' value={this.state.email} onChange={this.setEmail}/>\n                    <br/>\n                    <p>Password</p>\n                    <input id='pass' type='text' value={this.state.pass} onChange={this.setPass}/>\n                    <br/>\n                </form>\n                <button onClick={this.onLogin}>Login</button>\n\n                <p style={{color: 'yellow', fontSize: '20px'}}>{this.state.error}</p>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// The function takes data from the app current state,\n// and insert/links it into the props of our component.\n// This function makes Redux know that this component needs to be passed a piece of the state\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n// Doing this merges our actions into the component’s props,\n// while wrapping them in dispatch() so that they immediately dispatch an Action.\n// Just by doing this, we will have access to the actions defined in out actions file (action/Login.js)\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { firebase } from './firebase';\nconst URL = 'https://basketball-9e231.firebaseio.com';\n// Database structure:\n// Organizations obj:\n                // {banner: 'url to picture',\n                // name: 'Name of organization',\n                // subscriptions: 'Number of subs',\n                // Tournaments:{ \n                //     Tournament key: {\n                //         date: 'starting date of tournament',\n                //         name: 'Name of tournament'\n                //     }}\n                // }\n// Tournaments obj:\n            // {Tournament key: {\n            //     (Date of Game) Key:{\n            //         Game Key:{\n            //             aName: 'away team name',\n            //             hName: 'home team name',\n            //             aScore: 'away team score',\n            //             hScore: 'home team score',\n            //             time : 'Time of the game',\n            //         }\n            //     }\n            // }}\nconst db = firebase.database();\n\nexport const fetchOrgs = (that) =>{\n    let str = '/v1/Organizations.json';\n    fetch(URL + str).then((res) => res.json()).then((snapshot) => {\n        let list = [];\n        for (let key in snapshot){\n            let temp = snapshot[key];\n            list.push(temp);\n        }\n        that.setState({\n            orgs:list\n        });\n    });\n};\n\n\nexport const postOrg = (org) => {\n    console.log(org);\n    db.ref('/v1/Organizations').push(org);\n};","import React from \"react\";\nimport '../css/navigation.css'\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Navigation = (props) => {\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-default\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t\t<ul className=\"nav navbar-nav\">\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Home</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/organizations\">Organizations</NavLink></li>\n\t\t\t\t\t\t\t<li><NavLink to=\"/home\">Tournaments</NavLink></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {fetchOrgs} from '../firebase/services';\nimport {Navigation} from './navigation';\nimport '../css/home.css';\n\nexport class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            orgs: [],\n        }\n    }\n\n    componentDidMount = () =>{\n        fetchOrgs(this);\n    }\n    \n  render() {\n    return (\n      <div className='Home'>\n        <Navigation/>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {fetchOrgs} from '../firebase/services';\nimport {Navigation} from './navigation';\nimport Modal from 'react-modal';\n\nimport {postOrg} from '../firebase/services';\nimport logo from '../logo.svg';\n\nimport '../css/organizations.css'\n\nexport class Organizations extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            orgs: [],\n            showModal: false,\n            name: '',\n            url: '',\n            msg:'',\n        }\n    }\n\n    componentDidMount = () =>{\n        fetchOrgs(this);\n    }\n\n    openModal = () =>{\n        this.setState({\n            showModal: true\n        })\n    };\n    \n    closeModal = () =>{\n        this.setState({\n            showModal: false\n        })\n    };\n\n    setName = (event) =>{\n        this.setState({\n            name: event.target.value\n        })\n    };\n\n    setUrl = (event) =>{\n        this.setState({\n            url: event.target.value\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: this.state.url, subscriptions: 0, Tournaments: {default:'test'}};\n        if(this.state.name !== ''){\n            postOrg(obj);\n            this.setState({\n               msg: 'Organization Added!',\n           });\n           this.state.orgs.push(obj);\n        }else{\n            this.setState({\n                msg: 'Name: Field is Empty'\n            })\n        }\n\n    }\n  render() {\n    return (\n      <div className='Organizations'>\n        <Navigation/>\n        <button id='add-btn' onClick={this.openModal}>+ Add Organization</button>\n        <div id='container'>\n            <h3 style={{color: 'white', fontSize:'30px'}}>Organizations</h3>\n\n            <div>\n                <Modal\n                isOpen={this.state.showModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n                className=\"Modal\"\n                style={{overlay:{backgroundColor: 'black', opacity: '0.8'} }}\n                >\n\n                <div id='form-container'>\n                    <form>\n                        <p style={{color:'white'}}>Name of Organization</p>\n                        <input placeholder='NBA' id='name-form'type='text' value={this.state.name} onChange={this.setName}/>\n\n                        <p style={{color:'white'}}>Logo Url</p>\n                        <input placeholder='Optional' id='name-form'type='text' value={this.state.url} onChange={this.setUrl}/>\n                    </form>\n                    <button id='submit-btn' onClick={this.onSubmit}>Submit</button>\n\n                    <p style={{color: 'yellow', fontSize:'20px', marginLeft: '16%'}}>{this.state.msg}</p>\n                </div>\n\n                <div id='btn-container'>\n                    <button id='close-btn' onClick={this.closeModal}>Close</button>\n                </div>\n\n                </Modal>\n            </div>\n\n            <div id='item-container'>\n                    {this.state.orgs.map( (org, i) =>  \n                    <div>\n                        <p id='item-name'>{org.name}</p>\n                        <img width='200px' height='100px' src={org.banner} onError={(e)=>{e.target.onerror = null; e.target.src=logo}}/>\n                    </div>\n                        )}\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(Organizations);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from '../actions'; //Import your actions\nimport {postOrg} from '../firebase/services';\nimport {Navigation} from './navigation';\n\nexport class AddOrganization extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n        }\n    }\n\n    setName = (event) => {\n        this.setState({\n            name: event.target.value,\n        })\n    };\n\n    onSubmit = () =>{\n        let obj = {name: this.state.name, banner: '', subscriptions: 0, Tournaments: {default:'test'}};\n        postOrg(obj);\n    };\n\n  render() {\n    return (\n      <div className='AddOrganization'>\n        <Navigation/>\n        <h3>Add Organization</h3>\n        <div style={{border: '1px solid white'}}>\n        <form style={{padding:'10px'}}>\n            <p>Name</p>\n            <input id='name' type='text' value={this.state.name} onChange={this.setName}/>\n        </form>\n        <button style={{width:'150px'}} onClick={this.onSubmit}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(Actions, dispatch);\n}\n\n//Connect everything\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './login';\nimport Home from './home';\nimport Organizations from './organizations';\nimport AddOrganization from './addOrganization';\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={ (props)  => (\n        rest.auth === true\n        ? <Component {...props}/>\n        : <Redirect to= '/'/>\n    )}/>\n)   \n\nclass Main extends React.Component{\n\n\trender() {\n\t\treturn(\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login}/>\n                        <PrivateRoute exact path='/home' component={Home} auth={this.props.authentication}/>\n                        <PrivateRoute exact path=\"/organizations\" component={Organizations} auth={this.props.authentication}/>\n                        <Route exact path=\"/addOrg\" component={AddOrganization}/>\n                    </Switch>\n                </Router>\n\t\t);\n\t}\n};\n\n\nfunction mapStateToProps(state, props) {\n    return {\n        authentication: state.loginReducer.authentication,\n    }\n}\n\n//Connect everything\nexport default connect(mapStateToProps)(Main);","import { combineReducers } from 'redux';\n \nimport { SET_AUTH } from \"../actions/\" //Import the actions types constant we defined in our actions\n\n\nlet loginState = {authentication: false};\nconst loginReducer = (state = loginState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            state = {...loginState, authentication: true};\n            return state;\n        default:\n            return state;\n    }\n}\n\n// Combine all the reducers\nconst rootReducer = combineReducers({\n    loginReducer\n    // ,[ANOTHER REDUCER], [ANOTHER REDUCER] ....\n})\n \nexport default rootReducer;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './components/main';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n    <BrowserRouter> \n        <App />\n    </BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}